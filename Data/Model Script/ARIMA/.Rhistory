}
}
#print(paste("dists", dists))
label <- c(label, lab)
}
data <- cbind(data, label)
View(data)
View(data)
temp <- data
View(data)
while(TRUE) {
newCents <- list()
# create new centroids
for (i in 1:k)
{
sub <- subset(data, data$label == i)
sub <- sub[,1:(ncol(data)-1)]
point <- unname(unlist(colMeans(sub)))
newCents <- c(newCents, list(point))
}
cents <- newCents
newLabel <- numeric()
for (i in 1:nrow(data))
{
obs <- unname(unlist(data[i,(1:ncol(data) - 1)]))
#print(paste("obs",obs))
#print(paste("obs",obs))
dists <- double()
minDist <- 10000000
for (j in 1:k)
{
cent <- cents[[j]]
#print(paste("cent", cent))
#print(cent)
d <- dist(x = rbind(obs, cent), method = "manhattan")
#print(d)
if (d < minDist)
{
minDist <- d
lab <- j
}
}
#print(paste("dists", dists))
newLabel <- c(newLabel, lab)
}
ori <- data$label
if(all(ori == newLabel))
{
break
} else {
data$label <- newLabel
}
#data$label <- newLabel
}
data <- data[order(data[,6]),]
colnames(data)[6] <- "cluster"
write.csv(x = data, file = "clusteredData.csv")
ptm <- proc.time() - ptm
print(paste("Processing Time in secs: ",round(ptm[[3]])))
source('E:/FCI/DM/Bayes/bayesianknearest.R')
View(df)
Ø®
o
source('E:/FCI/DM/Bayes/bayesianknearest.R')
df
source('E:/FCI/DM/Bayes/bayesianknearest.R')
source('E:/FCI/DM/kmeans/kmeans.R')
source('E:/FCI/DM/Bayes/bayesianknearest.R')
source('E:/FCI/DM/kmeans/kmeans.R')
"good morning"
install.packages("forecast")
install.packages("forecast")
install.packages("forecast")
install.packages("forecast")
source('D:/Graduation Project/Twitter Script/twitter.R', echo=TRUE)
head(tweets.df)
View(tweets.df)
colnames(tweets.df)
getwd()
tweets.df
source('D:/Graduation Project/Twitter Script/twitter.R', echo=TRUE)
head(tweets.df)
top <- tweets.df[, c("text", "favoriteCount", "id", "screenName", "retweetCount")]
View(top)
top <- top[order(-top$retweetCount),]
top$favoriteCount <- NULL
write.csv(top, "topRetweeted.csv")
getwd()
loc <- tweets.df[, c("text", "screenName", "longitude", "latitude")]
View(loc)
loc <- loc[complete.cases(loc),]
write.csv("loc", locations)
write.csv(loc, "locations.csv")
top <- top[top$retweetCount > 0]
top <- top[top$retweetCount > 0,]
top <- top[top$retweetCount > 20,]
write.csv(top, "topRetweeted.csv")
setwd("D:/Graduation Project/ARIMA")
library(forecast)
library(xts)
path <- "Twitterdec.csv"
data <- read.csv(path)
data$X <- NULL
data$t <- as.POSIXct(data$t)
d <- xts(data$n, order.by = data$t)
plot(d)
ar <- auto.arima(log10(d))
fcst <- forecast(ar)
plot(fcst, type = "l")
fcts
fcst
fcst$upper[1,1]
fcst$upper[1,2]
val <- fcst$upper[1,2]
val <- 10^ * fcst$upper[1,2]
val <- 10^3 * fcst$upper[1,2]
View(d)
val
plot(d)
max(d)
path <- "Twittersep"
data <- read.csv(path)
data$X <- NULL
path <- "Twittersep.csv"
data <- read.csv(path)
data$X <- NULL
data$t <- as.POSIXct(data$t)
d <- xts(data$n, order.by = data$t)
plot(d)
ar <- auto.arima(log10(d))
fcst <- forecast(ar)
plot(fcst, type = "l")
plot(d)
plot(fcst, type = "l")
par(mfrow = c(1, 2),  mar = c(12, 4, 3, 2), mgp = c(3, 1, 0), cex = 0.8)
plot(d)
plot(fcst, type = "l")
val <- 10^3 * fcst$upper[1,2]
val
d <- log10(d)
plot(d)
ar <- auto.arima(log10(d))
fcst <- forecast(ar)
plot(fcst, type = "l")
par(mfrow = c(1, 2))
plot(d)
plot(fcst, type = "l")
par(mfrow = c(2, 1))
plot(d)
plot(fcst, type = "l")
par(mfrow = c(1, 2))
plot(d)
plot(fcst, type = "l")
path <- "Twittersep.csv"
data <- read.csv(path)
data$X <- NULL
data$t <- as.POSIXct(data$t)
d <- xts(data$n, order.by = data$t)
par(mfrow = c(1, 2))
plot(d)
ar <- auto.arima(log10(d))
fcst <- forecast(ar)
plot(fcst, type = "l")
val <- fcst$upper[1,2]
val <- fcst$upper[1,2]
val
val * 10^3
par(mfrow = c(1, 2))
plot(d)
plot(log10(d))
par(mfrow = c(1, 2))
ar <- auto.arima(d)
fcst <- forecast(ar)
plot(fcst, type = "l")
plot(fcst * 1000, type ="l")
plot(fcst * 1000)
plot(fcst, type = "l")
path <- "Twittersep.csv"
path <- "Twitterdec.csv"
data <- read.csv(path)
data$X <- NULL
data$t <- as.POSIXct(data$t)
d <- xts(data$n, order.by = data$t)
par(mfrow = c(1, 2))
plot(d)
plot(log10(d))
ar <- auto.arima(d)
fcst <- forecast(ar)
plot(fcst, type = "l")
fcst
val <- fcst$upper[1,2]
val
plot(d)
plot(log10(d))
ar <- auto.arima(d)
ar <- auto.arima(log10(d))
fcst <- forecast(ar)
plot(fcst, type = "l")
val <- fcst$upper[1,2]
val
val * 1000
confmean <- mean(fcst$upper[1,2])
confmean
val <- fcst$upper[1,2]
val
confmean <- mean(fcst$upper[,2])
confmean
path <- "Twitteraug.csv"
data <- read.csv(path)
data$X <- NULL
data$t <- as.POSIXct(data$t)
d <- xts(data$n, order.by = data$t)
par(mfrow = c(1, 2))
plot(d)
plot(log10(d))
data <- read.csv(path)
data$X <- NULL
data$t <- as.POSIXct(data$t)
d <- xts(data$n, order.by = data$t)
d <- log10(d)
par(mfrow = c(2, 4))
plot(d)
par(mfrow = c(1, 4))
plot(d)
plot(log10(d))
ar <- auto.arima(d)
fcst <- forecast(ar)
plot(fcst, type = "l")
ar2 <- auto.arima(log10(d))
ar2 <- auto.arima(log10(d))
fcst2 <- forecast(ar2)
plot(fcst2, type = "l")
?mfrow
?par
par(mfcol=c(4,1))
plot(d)
plot(log10(d))
par(mfrow = c(1, 4))
plot(d)
plot(log10(d))
plot(fcst, type = "l")
plot(fcst2, type = "l")
plot(fcst, type = "l")
par(mfrow = c(1, 1))
plot(fcst, type = "l")
par(mfrow = c(2, 1))
plot(log10(d))
par(mfrow = c(1, 1))
plot(log10(d))
plot(fcst2, type = "l")
plot(fcst, type = "l")
par(mfrow = c(1, 2))
plot(d)
par(mfrow = c(1, 2))
plot(fcst, type = "l")
plot(fcst2, type = "l")
fcst
par(mfrow = c(1, 2))
plot(d)
plot(fcst, type = "l")
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
View(d)
print(uppmax)
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
print(paste("Start : " , startTrend , "End : " , endTrend ))
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('~/.active-rstudio-document')
'size' <- function(n)
{
data <- c()
for(i in 1:100)
{
data <- c(data, 1)
print(print (i, object.size(data) ) )
}
}
source('~/.active-rstudio-document')
source('C:/Users/Moustafa/Desktop/aa.R')
source('C:/Users/Moustafa/Desktop/aa.R')
source('C:/Users/Moustafa/Desktop/aa.R')
source('C:/Users/Moustafa/Desktop/aa.R')
source('C:/Users/Moustafa/Desktop/aa.R')
source('C:/Users/Moustafa/Desktop/aa.R')
source('C:/Users/Moustafa/Desktop/aa.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
class(trend)
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
x < Sys.time()
x
source('C:/Users/Moustafa/Desktop/aa.R')
x <- Sys.time()
x
x + 3*60*60 + 2
x
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
time(trend)
timeDate(trend)
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
print(temp[0])
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
if(boolean | check)
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
endTrend <- temp[j]
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
library(dplyr)
path <- "dataOScars.csv"
source('D:/Fci/GP/Analysis/MostRetweeted.R')
source('D:/Fci/GP/Analysis/MostRetweeted.R')
source('D:/Fci/GP/Analysis/MostRetweeted.R')
source('D:/Fci/GP/Analysis/MostRetweeted.R')
source('D:/Fci/GP/Analysis/MostRetweeted.R')
source('D:/Fci/GP/Analysis/MostRetweeted.R')
source('D:/Fci/GP/Analysis/MostRetweeted.R')
source('D:/Fci/GP/Analysis/MostRetweeted.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
source('D:/Fci/GP/Model/ARIMA/arimaalpha.R')
